// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cardservice.proto

/*
Package craasbuf is a generated protocol buffer package.

It is generated from these files:
	cardservice.proto

It has these top-level messages:
	Card
	CardRequest
	CardResponse
*/
package craasbuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Card is a user's card
type Card struct {
	// id the card id
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Card) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// CardRequest is
type CardRequest struct {
	// nothing; there is no data
	Nothing *google_protobuf.Empty `protobuf:"bytes,1,opt,name=nothing" json:"nothing,omitempty"`
}

func (m *CardRequest) Reset()                    { *m = CardRequest{} }
func (m *CardRequest) String() string            { return proto.CompactTextString(m) }
func (*CardRequest) ProtoMessage()               {}
func (*CardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CardRequest) GetNothing() *google_protobuf.Empty {
	if m != nil {
		return m.Nothing
	}
	return nil
}

// CardResponse is the response from the server
type CardResponse struct {
	// card is the associated card
	Card *Card `protobuf:"bytes,1,opt,name=card" json:"card,omitempty"`
}

func (m *CardResponse) Reset()                    { *m = CardResponse{} }
func (m *CardResponse) String() string            { return proto.CompactTextString(m) }
func (*CardResponse) ProtoMessage()               {}
func (*CardResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CardResponse) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

func init() {
	proto.RegisterType((*Card)(nil), "craasbuf.Card")
	proto.RegisterType((*CardRequest)(nil), "craasbuf.CardRequest")
	proto.RegisterType((*CardResponse)(nil), "craasbuf.CardResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CardReader service

type CardReaderClient interface {
	// GetCardEvents returns a stream of CardResponses as long as the
	// client is connected.
	GetCardEvents(ctx context.Context, in *CardRequest, opts ...grpc.CallOption) (CardReader_GetCardEventsClient, error)
}

type cardReaderClient struct {
	cc *grpc.ClientConn
}

func NewCardReaderClient(cc *grpc.ClientConn) CardReaderClient {
	return &cardReaderClient{cc}
}

func (c *cardReaderClient) GetCardEvents(ctx context.Context, in *CardRequest, opts ...grpc.CallOption) (CardReader_GetCardEventsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_CardReader_serviceDesc.Streams[0], c.cc, "/craasbuf.CardReader/GetCardEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &cardReaderGetCardEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CardReader_GetCardEventsClient interface {
	Recv() (*CardResponse, error)
	grpc.ClientStream
}

type cardReaderGetCardEventsClient struct {
	grpc.ClientStream
}

func (x *cardReaderGetCardEventsClient) Recv() (*CardResponse, error) {
	m := new(CardResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for CardReader service

type CardReaderServer interface {
	// GetCardEvents returns a stream of CardResponses as long as the
	// client is connected.
	GetCardEvents(*CardRequest, CardReader_GetCardEventsServer) error
}

func RegisterCardReaderServer(s *grpc.Server, srv CardReaderServer) {
	s.RegisterService(&_CardReader_serviceDesc, srv)
}

func _CardReader_GetCardEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CardRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CardReaderServer).GetCardEvents(m, &cardReaderGetCardEventsServer{stream})
}

type CardReader_GetCardEventsServer interface {
	Send(*CardResponse) error
	grpc.ServerStream
}

type cardReaderGetCardEventsServer struct {
	grpc.ServerStream
}

func (x *cardReaderGetCardEventsServer) Send(m *CardResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _CardReader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "craasbuf.CardReader",
	HandlerType: (*CardReaderServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetCardEvents",
			Handler:       _CardReader_GetCardEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cardservice.proto",
}

func init() { proto.RegisterFile("cardservice.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8e, 0xcd, 0x6a, 0x85, 0x30,
	0x10, 0x85, 0x51, 0xa4, 0x3f, 0x63, 0x2b, 0x34, 0x50, 0x29, 0x76, 0x53, 0xb2, 0xea, 0x2a, 0x8a,
	0x7d, 0x80, 0x16, 0x8a, 0x74, 0xd7, 0x85, 0x6f, 0x10, 0xcd, 0x68, 0x03, 0x6d, 0x62, 0x93, 0x28,
	0xdc, 0xb7, 0xbf, 0x24, 0xb9, 0x6e, 0xdc, 0x9e, 0x39, 0xe7, 0x9b, 0x0f, 0x1e, 0x46, 0x6e, 0x84,
	0x45, 0xb3, 0xc9, 0x11, 0xd9, 0x62, 0xb4, 0xd3, 0xe4, 0x66, 0x34, 0x9c, 0xdb, 0x61, 0x9d, 0xaa,
	0xe7, 0x59, 0xeb, 0xf9, 0x17, 0xeb, 0x90, 0x0f, 0xeb, 0x54, 0xe3, 0xdf, 0xe2, 0x4e, 0xb1, 0x46,
	0x4b, 0xc8, 0x3e, 0xb9, 0x11, 0xa4, 0x80, 0x54, 0x8a, 0xa7, 0xe4, 0x25, 0x79, 0xbd, 0xed, 0x53,
	0x29, 0xe8, 0x3b, 0xe4, 0x3e, 0xef, 0xf1, 0x7f, 0x45, 0xeb, 0x48, 0x03, 0xd7, 0x4a, 0xbb, 0x1f,
	0xa9, 0xe6, 0xd0, 0xc9, 0xdb, 0x92, 0x45, 0x2a, 0xdb, 0xa9, 0xac, 0xf3, 0xd4, 0x7e, 0xaf, 0xd1,
	0x16, 0xee, 0x22, 0xc0, 0x2e, 0x5a, 0x59, 0x24, 0x14, 0x32, 0x2f, 0x79, 0x99, 0x17, 0x6c, 0xd7,
	0x63, 0xa1, 0x15, 0x6e, 0xed, 0x37, 0x40, 0xdc, 0x70, 0x81, 0x86, 0x7c, 0xc0, 0xfd, 0x17, 0x3a,
	0x1f, 0x74, 0x1b, 0x2a, 0x67, 0xc9, 0xe3, 0x61, 0x14, 0xdd, 0xaa, 0xf2, 0x18, 0xc7, 0x8f, 0x4d,
	0x32, 0x5c, 0x05, 0xb9, 0xb7, 0x73, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb9, 0xec, 0x7e, 0x2c, 0x1f,
	0x01, 0x00, 0x00,
}
